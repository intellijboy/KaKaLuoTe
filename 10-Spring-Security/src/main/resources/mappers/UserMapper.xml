<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxufe.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.jxufe.security.vo.SecurityUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="account_non_expired" jdbcType="INTEGER" property="accountNonExpired"/>
        <result column="account_non_locked" jdbcType="INTEGER" property="accountNonLocked"/>
        <result column="credentials_non_Expired" jdbcType="INTEGER" property="credentialsNonExpired"/>
        <result column="enabled" jdbcType="INTEGER" property="enabled"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, password, email, age, account_non_expired, account_non_locked, credentials_non_Expired,
    enabled
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.jxufe.entity.User">
    insert into user (id, name, password,
      email, age, account_non_expired, 
      account_non_locked, credentials_non_Expired, 
      enabled)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{accountNonExpired,jdbcType=INTEGER}, 
      #{accountNonLocked,jdbcType=INTEGER}, #{credentialsNonExpired,jdbcType=INTEGER}, 
      #{enabled,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.jxufe.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="accountNonExpired != null">
                account_non_expired,
            </if>
            <if test="accountNonLocked != null">
                account_non_locked,
            </if>
            <if test="credentialsNonExpired != null">
                credentials_non_Expired,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="accountNonExpired != null">
                #{accountNonExpired,jdbcType=INTEGER},
            </if>
            <if test="accountNonLocked != null">
                #{accountNonLocked,jdbcType=INTEGER},
            </if>
            <if test="credentialsNonExpired != null">
                #{credentialsNonExpired,jdbcType=INTEGER},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxufe.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="accountNonExpired != null">
                account_non_expired = #{accountNonExpired,jdbcType=INTEGER},
            </if>
            <if test="accountNonLocked != null">
                account_non_locked = #{accountNonLocked,jdbcType=INTEGER},
            </if>
            <if test="credentialsNonExpired != null">
                credentials_non_Expired = #{credentialsNonExpired,jdbcType=INTEGER},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxufe.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      account_non_expired = #{accountNonExpired,jdbcType=INTEGER},
      account_non_locked = #{accountNonLocked,jdbcType=INTEGER},
      credentials_non_Expired = #{credentialsNonExpired,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--2.按照用户名查找用户信息-->
    <select id="selectUserInfoByName" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where name = #{userName,jdbcType=INTEGER}
    </select>
    <!--1.按照用户名查找用户的角色信息-->
    <select id="selRoleInfoByName" resultType="string">
        SELECT r.name
        FROM user u,user_role ur,role r
        WHERE u.id = ur.uid
        AND r.id = ur.rid
        AND u.name=#{userName};
    </select>



</mapper>